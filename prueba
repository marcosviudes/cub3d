#####################################
### CONFIG
#####################################
NAME	:= cub3D
C		:= gcc
CFLAGS	:=  #-Wall -Wextra -Werror # -O3 -Wall -Wextra -Werror 
MKDIR	:= mkdir -p
LIBFT	:= libft/
INCLDIR	:= includes/
OBJ		:= obj
SRCS	:= src/
INCL	:= -I $(SRCS) -I $(INCLDIR)  
RM		:= rm -rf

ALLCS		:= $(shell find src/ -type f -iname *.c)
ALLOS		:= $(shell find obj/ -type f -iname *.o)
#ALLCSOBJS	:= $(patsubst %.c,%.o,$(ALLCS))
ALLCSOBJS	:= $(foreach F,$(ALLCS),$(call C2O,$(F)))
DIRS		:= $(shell find $(SRCS) -type d)
OBJ_DIRS	:= $(patsubst $(SRCS)%, $(OBJ)%, $(DIRS))

#####################################
### MACROS
#####################################
define COMPILE
$(2) : $(3)
	$(1) -c -o $(2)$(3)$(4)
endef

define C2O
	$(patsubst %.c,%.o,patsubst($(SRCS)%, $(OBJ)%, $(1)))
endef
#####################################


$(foreach F,$(ALLCS),$(call COMPILE,$(C),$(call C2O,$(F)),$(F),$(CFLAGS)))
${NAME}:	$(OBJ_DIRS) $(ALLCSOBJS)
		$(C) -o $(NAME) $(ALLOS) $(INCL) $(CFLAGS) 
#${NAME}:	$(OBJ_DIRS) $(ALLCSOBJS)
#		$(C) -o $(NAME) $(ALLOS) $(INCL) $(LIBFT) -I includes/
$(OBJ_DIRS):
	$(MKDIR) $(OBJ_DIRS)

#%.o: %.c
#	$(C) -o $(patsubst $(SRCS)%,$(OBJ)%,$@) -c $^ $(CFLAGS) -I includes/

all:		${NAME}			
clean:	
			$(RM) $(OBJ)/*
fclean:	clean 
			rm -f ${NAME}
re:		fclean all
debug:		$(OBJ_DIRS) $(ALLCSOBJS)
		$(C) -o $(NAME) -g $(ALLOS) $(INCL) -I includes/
.PHONY:	all clean fclean re debug